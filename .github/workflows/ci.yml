name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        django-version: ["4.1", "4.2", "5.0", "5.1"]
        ospy-version: ["2.8"]
        os-version: ["2.18.0", "2.19.0"]

        exclude:
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.1"

    steps:
      - name: Run OpenSearch
        uses: ankane/setup-opensearch@v1
        with:
          opensearch-version: ${{ matrix.os-version }}

      - uses: actions/checkout@v4

      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Pip Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements_test.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install "Django~=${{ matrix.django-version }}.0"
          python -m pip install "opensearch-py~=${{ matrix.ospy-version }}.0"
          python -m pip install -r requirements_test.txt

      - name: Run tests with Python ${{ matrix.python-version }} and Django ${{ matrix.django-version }} and opensearch-py ${{ matrix.ospy-version }}
        run: |
          TOX_ENV=$(echo "py${{ matrix.python-version }}-django${{ matrix.django-version }}-os${{ matrix.ospy-version }}" | tr -d .)
          python -m tox -e $TOX_ENV
          python -m tox -e $TOX_ENV -- --signal-processor celery
          python -m coverage xml

      - name: Coverage
        uses: ewjoachim/coverage-comment-action@v1
        with:
          GITHUB_TOKEN: ${{ github.token }}
          COVERAGE_FILE: "coverage.xml"
